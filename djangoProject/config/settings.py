"""
Django settings for SoftwareDevProject project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

from apps import casino
from apps.casino.context_processors import green_fund_context

#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = Path(__file__).resolve().parent.parent  # Converts BASE_DIR to a Path object


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-#&-s5im0v)0mrxa*(kquy*e_k=e!x)z$0ay#=1=mefyixp@x08"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "apps.casino",
    "apps.users",
    "apps.home",
    "apps.bingo",
    "apps.games",
    "apps.market",
    "apps.farm",
    "apps.battlepass",
    "apps.crates",
    "apps.crafting",
    "apps.climate_duels",
    "apps.garden",
    "channels",
]


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Make sure this is correct
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'apps.casino.context_processors.green_fund_context',
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"
ASGI_APPLICATION = 'djangoProject.asgi.application'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],  # adjust if Redis is running elsewhere
        },
    },
}

# Configure your message broker (RabbitMQ or Redis)
CELERY_BROKER_URL = 'amqp://guest:guest@127.0.0.1:5672//'

CELERY_BEAT_SCHEDULE = {
    'update-stock-prices-every-60-seconds': {
        'task': 'apps.market.tasks.update_stock_prices_task',
        'schedule': 30.0,
    },
    'generate-market-events-every-2-minutes': {
        'task': 'apps.market.tasks.generate_market_event_task',
        'schedule': 60.0,
    },
    'record-portfolio-snapshots-every-5-minutes': {
        'task': 'apps.market.tasks.record_portfolio_snapshots_task',
        'schedule': 30.0,
    },
    'reset-low-value-stocks-every-hour': {
        'task': 'apps.market.tasks.reset_low_value_stocks_task',
        'schedule': 15.0,
    },
}

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [
    BASE_DIR / "static",  # This should be for additional static files
]
STATIC_ROOT = BASE_DIR / "staticfiles"  # This is for `collectstatic`

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

SECURE_SSL_REDIRECT = False  # Disable HTTPS redirection
SESSION_COOKIE_SECURE = False  # Allow session cookies over HTTP
CSRF_COOKIE_SECURE = False  # Allow CSRF tokens over HTTP
SECURE_PROXY_SSL_HEADER = None  # Remove any forced SSL headers
LOGIN_REDIRECT_URL = '/'  # Change to your desired URL

LOGGING = {
    'version': 1,
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'user_changes.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}
